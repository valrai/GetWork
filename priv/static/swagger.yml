consumes:
  - application/json
basePath: "/api"
info:
  description: Documentation - GetWork API
  title: GetWork API
  version: '1.0'
produces:
  - application/json
schemes:
  - http
  - https
swagger: '2.0'
definitions:
  Language:
    type: object
    properties:
      name:
        type: string
    required:
      - name
  Tag:
    type: object
    properties:
      name:
        type: string
    required:
      - name
  Skill:
    type: object
    properties:
      name:
        type: string
    required:
      - name
  Claim:
    type: object
    properties:
      name:
        type: string
    required:
      - name
  Role:
    type: object
    properties:
      name:
        type: string
    required:
      - name
paths:
  # Languages
  /languages:
    post:
      summary: Create a new language
      description: Create a new language
      operationId: create
      parameters:
        - in: body
          name: language
          description: data of the new language
          schema:
            $ref: '#/definitions/Language'
      responses:
        '201':
          description: Created
          examples:
            application/json: {
              "data": {
                "name": "English"
              }
            }
        '422':
          description: Unprocessable Entity
          examples:
            application/json: {
              "errors": {
                "name": [
                  "can't be blank"
                ]
              }
            }
      tags:
        - Languages
    get:
      summary: List all languages
      description: List all languages
      operationId: index
      responses:
        '200':
          description: Success
          examples:
            application/json: {
              "data": [
                {
                  "id": "c6637477-a98e-4314-89a3-38c5dcf5e99c",
                  "name": "English",
                },
                {
                  "id": "b938351f-a403-4eb2-86b5-8f1a7995d168",
                  "name": "Brazilian Portuguese",
                }
              ]
            }
      tags:
      - Languages
  /languages/{id}:
    put:
      summary: Updates a language
      description: Updates a language
      operationId: update
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: id of the language to update
        - in: body
          name: language
          description: Language update data
          schema:
            $ref: '#/definitions/Language'
      responses:
        '200':
          description: Success
          examples:
            application/json: {
              "name": "English"
            }
        '404':
          description: Resource not found
          examples:
            application/json: {
              "errors": {
                "detail": "resource not found"
              }
            }
        '422':
          description: Unprocessable Entity
          examples:
            application/json: {
              "errors": {
                "name": [
                  "can't be blank"
                ]
              }
            }
      tags:
        - Languages
    delete:
      summary: Deletes a language
      description: Deletes a language
      operationId: delete
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: id of the language to delete
      responses:
        '204':
          description: Success
        '404':
          description: Resource not found
          examples:
            application/json: {
              "errors": {
                "detail": "resource not found"
              }
            }
      tags:
        - Languages
  # Tags
  /tags:
    post:
      summary: Create a new tag
      description: Create a new tag
      operationId: create
      parameters:
        - in: body
          name: tag
          description: data of the new tag
          schema:
            $ref: '#/definitions/Tag'
      responses:
        '201':
          description: Created
          examples:
            application/json: {
              "data": {
                "name": "Elixir"
              }
            }
        '422':
          description: Unprocessable Entity
          examples:
            application/json: {
              "errors": {
                "name": [
                  "can't be blank"
                ]
              }
            }
      tags:
        - Tags
    get:
      summary: List all tags
      description: List all tags
      operationId: index
      responses:
        '200':
          description: Sucesss
          examples:
            application/json: {
              "data": [
                {
                  "id": "c6637477-a98e-4314-89a3-38c5dcf5e99c",
                  "name": "Elixir",
                },
                {
                  "id": "b938351f-a403-4eb2-86b5-8f1a7995d168",
                  "name": "Phoenix",
                }
              ]
            }
      tags:
      - Tags
  /tags/{id}:
    put:
      summary: Updates a tag
      description: Updates a tag
      operationId: update
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: id of the tag to update
        - in: body
          name: tag
          description: Tag update data
          schema:
            $ref: '#/definitions/Tag'
      responses:
        '200':
          description: Success
          examples:
            application/json: {
              "name": "Elixir"
            }
        '404':
          description: Resource not found
          examples:
            application/json: {
              "errors": {
                "detail": "resource not found"
              }
            }
        '422':
          description: Unprocessable Entity
          examples:
            application/json: {
              "errors": {
                "name": [
                  "can't be blank"
                ]
              }
            }
      tags:
        - Tags
    delete:
      summary: Deletes a tag
      description: Deletes a tag
      operationId: delete
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: id of the tag to delete
      responses:
        '204':
          description: Success
        '404':
          description: Resource not found
          examples:
            application/json: {
              "errors": {
                "detail": "resource not found"
              }
            }
      tags:
        - Tags
  # Skills
  /skills:
    post:
      summary: Create a new skill
      description: Create a new skill
      operationId: create
      parameters:
        - in: body
          name: skill
          description: data of the new skill
          schema:
            $ref: '#/definitions/Skill'
      responses:
        '201':
          description: Created
          examples:
            application/json: {
              "data": {
                "name": "Elixir"
              }
            }
        '422':
          description: Unprocessable Entity
          examples:
            application/json: {
              "errors": {
                "name": [
                  "can't be blank"
                ]
              }
            }
      tags:
        - Skills
    get:
      summary: List all skills
      description: List all skills
      operationId: index
      responses:
        '200':
          description: Sucesss
          examples:
            application/json: {
              "data": [
                {
                  "id": "c6637477-a98e-4314-89a3-38c5dcf5e99c",
                  "name": "Elixir",
                },
                {
                  "id": "b938351f-a403-4eb2-86b5-8f1a7995d168",
                  "name": "RESTful API",
                }
              ]
            }
      tags:
      - Skills
  /skills/{id}:
    put:
      summary: Updates a skill
      description: Updates a skill
      operationId: update
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: id of the skill to update
        - in: body
          name: skill
          description: Skill update data
          schema:
            $ref: '#/definitions/Skill'
      responses:
        '200':
          description: Success
          examples:
            application/json: {
              "name": "RESTful API"
            }
        '404':
          description: Resource not found
          examples:
            application/json: {
              "errors": {
                "detail": "resource not found"
              }
            }
        '422':
          description: Unprocessable Entity
          examples:
            application/json: {
              "errors": {
                "name": [
                  "can't be blank"
                ]
              }
            }
      tags:
        - Skills
    delete:
      summary: Deletes a skill
      description: Deletes a skill
      operationId: delete
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: id of the skill to delete
      responses:
        '204':
          description: Success
        '404':
          description: Resource not found
          examples:
            application/json: {
              "errors": {
                "detail": "resource not found"
              }
            }
      tags:
        - Skills
  # Claims
  /claims:
    post:
      summary: Create a new claim
      description: Create a new claim
      operationId: create
      parameters:
        - in: body
          name: claim
          description: data of the new claim
          schema:
            $ref: '#/definitions/Claim'
      responses:
        '201':
          description: Created
          examples:
            application/json: {
              "data": {
                "name": "create_claim"
              }
            }
        '422':
          description: Unprocessable Entity
          examples:
            application/json: {
              "errors": {
                "name": [
                  "can't be blank"
                ]
              }
            }
      tags:
        - Claims
    get:
      summary: List all claims
      description: List all claims
      operationId: index
      responses:
        '200':
          description: Sucesss
          examples:
            application/json: {
              "data": [
                {
                  "id": "c6637477-a98e-4314-89a3-38c5dcf5e99c",
                  "name": "create_claims",
                },
                {
                  "id": "b938351f-a403-4eb2-86b5-8f1a7995d168",
                  "name": "delete_claims",
                }
              ]
            }
      tags:
      - Claims
  /claims/{id}:
    put:
      summary: Updates a claim
      description: Updates a claim
      operationId: update
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: id of the claim to update
        - in: body
          name: claim
          description: Claim update data
          schema:
            $ref: '#/definitions/Claim'
      responses:
        '200':
          description: Success
          examples:
            application/json: {
              "name": "update_claims"
            }
        '404':
          description: Resource not found
          examples:
            application/json: {
              "errors": {
                "detail": "resource not found"
              }
            }
        '422':
          description: Unprocessable Entity
          examples:
            application/json: {
              "errors": {
                "name": [
                  "can't be blank"
                ]
              }
            }
      tags:
        - Claims
    delete:
      summary: Deletes a claim
      description: Deletes a claim
      operationId: delete
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: id of the claim to delete
      responses:
        '204':
          description: Success
        '404':
          description: Resource not found
          examples:
            application/json: {
              "errors": {
                "detail": "resource not found"
              }
            }
      tags:
        - Claims
  # Roles
  /roles:
    post:
      summary: Create a new role
      description: Create a new role
      operationId: create
      parameters:
        - in: body
          name: role
          description: data of the new role
          schema:
            $ref: '#/definitions/Role'
      responses:
        '201':
          description: Created
          examples:
            application/json: {
              "data": {
                "name": "admin"
              }
            }
        '422':
          description: Unprocessable Entity
          examples:
            application/json: {
              "errors": {
                "name": [
                  "can't be blank"
                ]
              }
            }
      tags:
        - Roles
    get:
      summary: List all roles
      description: List all roles
      operationId: index
      responses:
        '200':
          description: Sucesss
          examples:
            application/json: {
              "data": [
                {
                  "id": "c6637477-a98e-4314-89a3-38c5dcf5e99c",
                  "name": "company",
                },
                {
                  "id": "b938351f-a403-4eb2-86b5-8f1a7995d168",
                  "name": "candidate",
                }
              ]
            }
      tags:
      - Roles
  /roles/{id}:
    put:
      summary: Updates a role
      description: Updates a role
      operationId: update
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: id of the role to update
        - in: body
          name: role
          description: Role update data
          schema:
            $ref: '#/definitions/Role'
      responses:
        '200':
          description: Success
          examples:
            application/json: {
              "name": "update_roles"
            }
        '404':
          description: Resource not found
          examples:
            application/json: {
              "errors": {
                "detail": "resource not found"
              }
            }
        '422':
          description: Unprocessable Entity
          examples:
            application/json: {
              "errors": {
                "name": [
                  "can't be blank"
                ]
              }
            }
      tags:
        - Roles
    delete:
      summary: Deletes a role
      description: Deletes a role
      operationId: delete
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: id of the role to delete
      responses:
        '204':
          description: Success
        '404':
          description: Resource not found
          examples:
            application/json: {
              "errors": {
                "detail": "resource not found"
              }
            }
      tags:
        - Roles
